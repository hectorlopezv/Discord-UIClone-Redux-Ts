[{"/home/hvmlopez/discord-ui-clone-ts/src/index.tsx":"1","/home/hvmlopez/discord-ui-clone-ts/src/reportWebVitals.ts":"2","/home/hvmlopez/discord-ui-clone-ts/src/App.tsx":"3","/home/hvmlopez/discord-ui-clone-ts/src/components/Sidebar/SidebarChannel/SidebarChannel.tsx":"4","/home/hvmlopez/discord-ui-clone-ts/src/components/Chat/ChatHeader/ChatHeader.tsx":"5","/home/hvmlopez/discord-ui-clone-ts/src/components/Chat/chatMessage/Message.tsx":"6","/home/hvmlopez/discord-ui-clone-ts/src/store/reducers/User.tsx":"7","/home/hvmlopez/discord-ui-clone-ts/src/store/actions/actionTypes.tsx":"8","/home/hvmlopez/discord-ui-clone-ts/src/store/reducers/App.tsx":"9","/home/hvmlopez/discord-ui-clone-ts/src/components/Login/login.tsx":"10","/home/hvmlopez/discord-ui-clone-ts/src/firebase.js":"11","/home/hvmlopez/discord-ui-clone-ts/src/store/actions/User.tsx":"12","/home/hvmlopez/discord-ui-clone-ts/src/store/actions/App.tsx":"13","/home/hvmlopez/discord-ui-clone-ts/src/container/Chat/Chat.tsx":"14","/home/hvmlopez/discord-ui-clone-ts/src/container/Sidebar/Sidebar.tsx":"15","/home/hvmlopez/discord-ui-clone-ts/src/store/sagas/index.tsx":"16","/home/hvmlopez/discord-ui-clone-ts/src/store/sagas/discord.tsx":"17","/home/hvmlopez/discord-ui-clone-ts/src/axios.tsx":"18"},{"size":1332,"mtime":1607344993058,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1607027690553,"results":"21","hashOfConfig":"20"},{"size":1382,"mtime":1607263338882,"results":"22","hashOfConfig":"20"},{"size":767,"mtime":1607347784158,"results":"23","hashOfConfig":"20"},{"size":1278,"mtime":1607263313817,"results":"24","hashOfConfig":"20"},{"size":823,"mtime":1607352393054,"results":"25","hashOfConfig":"20"},{"size":723,"mtime":1607183352851,"results":"26","hashOfConfig":"20"},{"size":293,"mtime":1607354342828,"results":"27","hashOfConfig":"20"},{"size":448,"mtime":1607183185118,"results":"28","hashOfConfig":"20"},{"size":663,"mtime":1607263320311,"results":"29","hashOfConfig":"20"},{"size":744,"mtime":1607174436136,"results":"30","hashOfConfig":"20"},{"size":1280,"mtime":1607354632007,"results":"31","hashOfConfig":"20"},{"size":260,"mtime":1607182569506,"results":"32","hashOfConfig":"20"},{"size":3351,"mtime":1607352381875,"results":"33","hashOfConfig":"20"},{"size":3839,"mtime":1607355284456,"results":"34","hashOfConfig":"20"},{"size":963,"mtime":1607354594109,"results":"35","hashOfConfig":"20"},{"size":1439,"mtime":1607354415703,"results":"36","hashOfConfig":"20"},{"size":138,"mtime":1607343297422,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fnhl96",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/hvmlopez/discord-ui-clone-ts/src/index.tsx",[],["77","78"],"/home/hvmlopez/discord-ui-clone-ts/src/reportWebVitals.ts",[],"/home/hvmlopez/discord-ui-clone-ts/src/App.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/components/Sidebar/SidebarChannel/SidebarChannel.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/components/Chat/ChatHeader/ChatHeader.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/components/Chat/chatMessage/Message.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/store/reducers/User.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/store/actions/actionTypes.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/store/reducers/App.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/components/Login/login.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/firebase.js",[],["79","80"],"/home/hvmlopez/discord-ui-clone-ts/src/store/actions/User.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/store/actions/App.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/container/Chat/Chat.tsx",["81","82"],"import React, {useState, useEffect, useCallback} from 'react'\nimport './Chat.css';\nimport ChatHeader from '../../components/Chat/ChatHeader/ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from '../../components/Chat/chatMessage/Message';\nimport { useSelector, useDispatch} from 'react-redux';\nimport db from '../../firebase';\nimport firebase from 'firebase';\nimport {fetchConverstation, newMessagePost} from '../../store/actions/User';\n\nexport interface ChatProps {\n    \n}\n \nconst Chat: React.FC<ChatProps> = () => {\n    const dispatch = useDispatch();\n    const user = useSelector((currentState:any ) =>  currentState.user.user);\n    const channelName = useSelector((currentState:any ) =>  currentState.app.channelName);\n    const channelId = useSelector((currentState:any ) =>  currentState.app.channelId);\n    const [input, setInput] = useState('');\n    const [messages, setmessages] = useState([]);\n    const getMessage = useCallback((id:string, setMessage: any) => dispatch(fetchConverstation(id, setMessage)), [dispatch]);\n    const newMessage = useCallback((message: string, user: any, id: string) => dispatch(newMessagePost(message, user, id)), [dispatch]);\n\n    useEffect(() => {//get mesasges from firebase\n\n        if(channelId){\n            getMessage(channelId, setmessages);\n        }\n    }, [channelId, getMessage]);\n\n    const inputHandler = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value);\n    }\n\n    const sendMessage = (event: any) => {//we send message\n        //to the collection with use!\n        event.preventDefault();\n\n        if(input.length > 0){\n            newMessage(input, {...user}, channelId);\n            setInput('');\n        }\n    }\n\n    return (  \n        <div className=\"chat\">\n            <ChatHeader\n                channelName={channelName}\n            />\n            <div className=\"chat_messages\">\n                {messages.map((message: any) => {\n            \n                    return <Message \n                    key={Math.random().toString()}\n                        timestamp={message.timestamp}\n                        message= {message.message}\n                        user={message.user}\n                    />\n                })}\n            </div>\n\n            <div className=\"chat_input\">\n                <AddCircleIcon fontSize=\"large\" />\n                <form >\n                    <input onChange={inputHandler} \n                    disabled={channelName? false: true} \n                    value={input} \n                    placeholder={`Message #${channelName}`}/>\n                    <button\n                        onClick={sendMessage} \n                        className=\"chat_inputButton\" \n                        type=\"submit\">\n                            Send Message\n                    </button>\n                </form>\n\n                <div className=\"chat_inputIcons\">\n                    <CardGiftcardIcon fontSize=\"large\"/>\n                    <GifIcon fontSize=\"large\" />\n                    <EmojiEmotionsIcon fontSize=\"large\" />\n                </div>\n\n            </div>\n\n        </div>      \n);\n}\n \nexport default Chat;","/home/hvmlopez/discord-ui-clone-ts/src/container/Sidebar/Sidebar.tsx",["83"],"/home/hvmlopez/discord-ui-clone-ts/src/store/sagas/index.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/store/sagas/discord.tsx",[],"/home/hvmlopez/discord-ui-clone-ts/src/axios.tsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":10},{"ruleId":"88","severity":1,"message":"92","line":11,"column":8,"nodeType":"90","messageId":"91","endLine":11,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":10},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]